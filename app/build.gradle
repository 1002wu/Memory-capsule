apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
def android_config = rootProject.ext.android
def app = rootProject.ext.one

gradle.taskGraph.whenReady { TaskExecutionGraph taskGraph ->
    if ("${taskGraph.allTasks}".contains("assembleRelease")) {
        buildLog("${app.versionName}", "${app.versionCode}")
    }
}


android {
    compileSdkVersion android_config.compileSdkVersion
    buildToolsVersion android_config.buildToolsVersion
    defaultConfig {
        applicationId app.applicationId
        minSdkVersion android_config.minSdkVersion
        targetSdkVersion android_config.targetSdkVersion
        versionCode app.versionCode
        versionName app.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("boolean", "isLogDebug", String.valueOf(rootProject.ext.isLogDebug))
        resValue "string", "key_0", app.key_0
        resValue "string", "key_1", app.key_1
        resValue "string", "key_2", app.key_2
        resValue "string", "key_3", app.key_3
        resValue "string", "key_4", app.key_4
        resValue "string", "key_5", app.key_5
        resValue "string", "key_6", app.key_6
        resValue "string", "key_7", app.key_7
        resValue "string", "key_8", app.key_8
        multiDexEnabled true
    }

    signingConfigs {
        releaseConfig {
            storeFile file('0xGRpgTy.jks')
            storePassword "0xGRpgTy"
            keyAlias "0xGRpgTy"
            keyPassword "0xGRpgTy"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [design_width : "360",
                                    design_height: "640 "]
        }
        release {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [design_width : "360",
                                    design_height: "640 "]

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = outputFileName
                    if (outputFile != null
                            && outputFileName.endsWith('.apk')
                            && 'release'.equals(variant.buildType.name)) {
                        outputFileName = "security_release_${app.versionCode}(${app.versionName})_${releaseTime()}.apk"
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def releaseTime() {
    return new Date().format("MMdd_HHmm", TimeZone.getTimeZone("GMT+08:00"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':lib_comm')
    implementation project(path: ':lib_splash')
    implementation project(path: ':lib_main')
    implementation project(path: ':lib_calendar')
    implementation project(path: ':lib_other')
    implementation project(path: ':lib_chart')
    implementation project(path: ':lib_setting')
    implementation project(path: ':lib_edit')
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    // 引入multidex库
    implementation 'androidx.multidex:multidex:2.0.0'
    debugApi 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'
}
/**
 * 构建时间
 * @return
 */
static def buildTime(String time) {
    def date = new Date()
    def formattedDate = date.format(time)
    return formattedDate
}
